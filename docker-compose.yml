version: '3.9'

services:
  back_base:
    restart: no
    build: .
    depends_on:
      - mysql
    ports:
      - "8080:8080"
    networks:
      - mi_red
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/prueba
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: clave
      SPRING_KAFKA_BOOTSTRAP_SERVERS: "localhost:2181"


  mysql:
    restart: always
    image: mysql
    ports:
      - "3306:3306"
    volumes:
      - db-data-test:/var/lib/mysql_data
    environment:
      MYSQL_ROOT_PASSWORD: clave
    networks:
      - mi_red
  zookeeper:
    restart: always
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  kafka:
    restart: always
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"  # Expose Kafka on port 9092
      - "29092:29092"  # Optional: For additional flexibility
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  mongo-db:
    image : mongo:6.0.6
    restart : always
    environment :
      MONGO_INITDB_ROOT_USERNAME: mongo-user
      MONGO_INITDB_ROOT_PASSWORD: 123456
    volumes:
      - ./mongo:/data/db
    ports:
      - "27017:27017"


networks:
  mi_red:

volumes:
  db-data-test: